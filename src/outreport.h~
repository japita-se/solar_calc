#ifndef OUTREPORT_H
#define OUTREPORT_H
#include "data.h"
#include <QTextCursor>
#include <QImage>
#include <QtGui>

class QTextDocument;
class QwtPlot;

 
class OutReport :public QWidget 
{

	 
public:
	OutReport(QWidget* parent =0);
	~OutReport();
	void addSystem(sy a);
	QString getDir();
	void setTable(const QString& g);
	void setDir(const QString& g);
	void setEcoParameters(ecopara o);
	void addVanDiagram(const QwtPlot* p);
	void addRawDiagram(const QwtPlot* p);
	void addSolarRadiation(const QwtPlot* p);
	void addSolarRadiation2(const QwtPlot* p);
	void addEEnergy(const QwtPlot* p);
        void setVersion(const QString &version);
  	void addLocation(loc localita);
 	void addPanel(panel p);
  	void addInverter(inverter inv);
	void addOption(option o);
  	void addRad(const double *H);
	void addEnergy(const double *E);
	void addUnitRad(const QString &s);
	void addUnitEnergy(const QString &s);
	void addTotEnergy(double a);
	void addSolarDiagram(const QwtPlot *p);
	void print(QPrinter *y,int mode);
	
private:
	int numPanels();
	QTextDocument * const m_document;
	QTextCursor   m_cursor;
	 

	loc localita;
	panel    pan;
	inverter inv;
	option opt;
	ecopara eco;
	QStringList models,types,sources,mounting,regime;
	bool Hset,Eset,ecoIsPresent;
	QString unit,unitEnergy,recentDir,version,summaryTable;
	double totEnergy ;
	const QwtPlot *solarDiagram,*vanDiagram,*rawDiagram,*eEnergy;
	QwtPlot *solarRadiation,*solarRadiation2;
	sy systemDetails;
	 
	const double* H,*E;
enum {
		rack,
		direct,
		standoff	
	};

	enum{
	con,
	variable_high_snow,
	variable_low_snow
	};
};
#endif
